
------------------------------------------------------------------------------------------------------
DATA CHECKING
*kulang pa ni, edit lang if naa pay dapat i check sa mga data inputs. if okay na, butangi lang ug 'DONE' or something 

CLIENT
->first and last name should not be null (done)
->client type should not be null (done)

DONOR
->barangay, city/municipality, province, zipcode, blood rh, bloodtype, birthday, weight, height, gallons (done)
-> donor's age should be legal
-> BloodType - A, B, AB, O (done)
-> RH - +,- (done)
-> gallons

BLOOD
not null: dapat not null tanan?

DONOR_ILLNESS
not null: tanan ? wa bitaw ko kahibaw

REQUEST
not null: tanan except recipient name or basin required na ?


--------------------------------------------------------------------------------------------------------
ADD STUFF
->add client (done)
->add donor (almost there)
-> add donation

UPDATE
->Client
->Donor
->Blood
->Donor Illness
->Request

DELETE


VIEW
-> search bloodtype
-> search donor


--------------------------------------------------------------------------------------------------------
VIEWS THAT MUST BE CREATED (please create this on your db para mu work ang search)
Constraints pud diay.

CREATE VIEW DONOR_VIEW AS
select idno, fname, mname, lname, phone, birthday, age, weight, height, ethnicity, houseno, street, barangay, citymun, province, zipcode, bloodtype, bloodrh, gallons, amountdonated
FROM Client NATURAL JOIN DONOR;

CREATE VIEW BLOODTYPE_VIEW AS
select trackingno, idno, fname, mname, lname, bloodtype, bloodrh, amount,
time, date, withdrawalstatus
FROM BLOOD natural join Client

CREATE VIEW REQUEST_VIEW AS
SELECT requestno, idno, fname, mname, lname, bloodtype, bloodrh, date, time, dateneeded, recipientname, status from REQUEST natural join CLIENT;

CREATE VIEW WITHDRAWAL_VIEW AS
SELECT trackingno, idno, bloodtype, bloodrh, amount, date, time, fname, mname, lname from blood natural join client where withdrawalstatus='true';

ALTER TABLE BLOOD
drop column idno;

ALTER TABLE BLOOD
add column idno;

ALTER TABLE BLOOD
add constraint id_blood
foreign key(idno)
references donor(idno)
on delete set null;

ALTER TABLE REQUEST
drop column idno;

ALTER TABLE REQUEST
add column idno;

ALTER TABLE REQUEST
add constraint idno_request
foreign key(idno)
references client(idno)
on delete set null;

SELECT LPAD (idno::text, 10, '0'), * FROM CLIENT

-----------------------------------------------------------
New Changes to DB
(May 21, 2016)

ALTER TABLE DONOR 
ALTER COLUMN gallons type numeric(5,2) using gallons::numeric;

CREATE FUNCTION calc_gallon(val1 numeric, total numeric) RETURNS numeric AS $$
BEGIN
	total:= val1 / 3785.41;
	RETURN total;
END; $$
LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION update_amount()  
RETURNS trigger AS  $$  
BEGIN
    UPDATE donor set amountdonated=addAmount(amountdonated, New.amount) where idno=New.idno;
    UPDATE donor set gallons=calc_gallon(amountdonated, 0) where idno=New.idno;
    RETURN NEW;  
END;  
$$
LANGUAGE PLPGSQL;

CREATE FUNCTION addAmount(val1 numeric, val2 numeric) RETURNS numeric AS $$
BEGIN
	RETURN val1 + val2;
END; $$
LANGUAGE PLPGSQL;

CREATE TRIGGER update_amt_gallon
  AFTER INSERT
  ON Blood 
  FOR EACH ROW  
  EXECUTE PROCEDURE update_amount();


